
#1 What is the total amount each customer spent at the restaurant?

SELECT 
 s.customer_id,sum(m.price) AS total_amount_spent
FROM sales s JOIN menu m ON s.product_id=m.product_id
GROUP BY s.customer_id;



#2. How many days has each customer visited the restaurant?

SELECT 
 customer_id, COUNT(DISTINCT order_date) number_of_days_customer_visited 
FROM sales GROUP BY customer_id;

#3. What was the first item from the menu purchased by each customer?

WITH cte AS 
(
SELECT customer_id, order_date , product_id , 
ROW_NUMBER () OVER(PARTITION BY customer_id ORDER BY order_date) AS rn
FROM sales)
SELECT cte.customer_id ,cte.product_id, product_name 
FROM cte
JOIN menu m  ON cte.product_id = m.product_id
WHERE rn = 1;

#4. What is the most purchased item on the menu and how many times was it purchased by all customers?

WITH cte AS 
(
SELECT product_id , COUNT(1) as purchased_frequency FROM sales GROUP BY product_id 
)
SELECT m.product_name , cte.purchased_frequency FROM cte JOIN menu m 
ON m.product_id=cte.product_id
ORDER BY purchased_frequency DESC
LIMIT 1 ;

#5. Which item was the most popular for each customer?

WITH cte AS
(SELECT 
 s.customer_id , m.product_name FROM sales s 
JOIN menu m ON s.product_id = m.product_id 
) ,
cte2 AS
(
SELECT  
  cte.customer_id , cte.product_name, count(cte.product_name) AS product_frequency,
DENSE_RANK() OVER(PARTITION BY cte.customer_id ORDER BY count(cte.product_name)DESC ) AS dnk
FROM cte 
GROUP BY cte.customer_id , cte.product_name)
SELECT cte2.customer_id ,  cte2.product_name, cte2.product_frequency
FROM cte2 WHERE cte2.dnk = 1;


#6. Which item was purchased first by the customer after they became a member?

WITH cte AS (
SELECT ms.customer_id , ms.join_date , mu.product_name ,s.product_id ,s.order_date,
ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date) AS row_num
FROM members ms
JOIN sales s ON ms.customer_id = s.customer_id
JOIN menu mu ON mu.product_id= s.product_id 
WHERE order_date >= join_date
)
SELECT cte.customer_id , cte.join_date , 
cte.product_name , cte.product_id ,cte.order_date FROM cte
WHERE row_num =1;



#7. Which item was purchased just before the customer became a member?

WITH cte AS (
SELECT ms.customer_id , ms.join_date , mu.product_name , s.product_id ,s.order_date,
RANK() OVER(PARTITION BY customer_id ORDER BY order_date DESC) AS rnk
FROM members ms
JOIN sales s ON ms.customer_id = s.customer_id
JOIN menu mu ON mu.product_id= s.product_id 
WHERE order_date < join_date
)
SELECT cte.customer_id , cte.join_date , 
cte.product_name , cte.product_id ,cte.order_date FROM cte
WHERE rnk =1;


#8. What is the total items and amount spent for each member before they became a member?

WITH cte AS (
SELECT ms.customer_id , ms.join_date , mu.product_name , s.product_id ,s.order_date,mu.price
 FROM members ms
JOIN sales s ON ms.customer_id = s.customer_id
JOIN menu mu ON mu.product_id= s.product_id 
WHERE order_date < join_date
)
SELECT cte.customer_id , SUM(cte.price) AS amount_spent ,
COUNT(cte.product_name ) AS total_items FROM cte
GROUP BY  cte.customer_id ;



#9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - 
#how many points would each customer have?

WITH cte AS (
SELECT s.customer_id,s.product_id,m.product_name,m.price,
CASE 
     WHEN m.product_name = "sushi" THEN price*20
     WHEN m.product_name <> "sushi" THEN price*10
     END AS points
     FROM sales s 
     JOIN menu m ON s.product_id=m.product_id)
SELECT cte.customer_id, sum(points) AS total_points FROM cte GROUP BY cte.customer_id;
     
 
 
 #10. In the first week after a customer joins the program (including their join date) they earn 
 #2x points on all items, not just sushi - how many points do customer A and B have at the end of January?  
 
 WITH cte AS (
 SELECT s.customer_id , s.order_date , s.product_id , m.join_date, mu.price*20 AS price_
 FROM sales s JOIN members m  ON s.customer_id=m.customer_id
 JOIN menu mu ON s.product_id = mu.product_id
 WHERE m.join_date<=s.order_date AND MONTH(order_date)=1
 )
 SELECT cte.customer_id , SUM(cte.price_) FROM cte 
 GROUP BY cte.customer_id;
 
 
 #Bonus_Question
 # Join all the things
 
 SELECT s.customer_id, s.order_date ,mu.product_name , mu.price ,
 CASE 
 WHEN ms.join_date>s.order_date then "N"
 ELSE "Y" 
 END AS member 
 FROM sales s JOIN menu mu ON s.product_id = mu.product_id
 JOIN members ms on ms.customer_id = s.customer_id
 ORDER BY s.customer_id,s.order_date;
 
 #Rank all the things
 
 WITH cte AS
 (
 SELECT s.customer_id, s.order_date ,mu.product_name , mu.price ,
 CASE 
  WHEN ms.join_date>s.order_date THEN "N"
  ELSE "Y" 
 END AS member
 FROM sales s JOIN menu mu ON s.product_id = mu.product_id
 JOIN members ms on ms.customer_id = s.customer_id
 ORDER BY s.customer_id,s.order_date)
 SELECT *,
 CASE
  WHEN cte.member = "N" THEN null
 ELSE RANK() OVER (PARTITION BY cte.customer_id ,cte.member ORDER BY cte.order_date ASC ) 
 END AS ranking
 FROM cte;
